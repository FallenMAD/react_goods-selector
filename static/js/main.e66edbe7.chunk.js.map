{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","addButton","good","setState","clearButton","this","className","type","onClick","map","isGood","classNames","Component","ReactDOM","render","document","getElementById"],"mappings":"2PAMaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAyB,CACvBC,aAAc,OAFlB,EAKEC,UAAY,SAACC,GACX,EAAKC,SAAS,CACZH,aAAcE,KAPpB,EAWEE,YAAc,WACZ,EAAKD,SAAS,CACZH,aAAc,MAbpB,4CAiBE,WAAqB,IAAD,OACVA,EAAiBK,KAAKN,MAAtBC,aAER,OACE,uBAAMM,UAAU,oBAAhB,UAEIN,EAEI,qBAAIM,UAAU,sCAAd,oBACMN,EADN,gBAIE,wBACE,UAAQ,cACRO,KAAK,SACLD,UAAU,cACVE,QAASH,KAAKD,iBAIjB,oBAAIE,UAAU,QAAd,+BAGP,uBAAOA,UAAU,QAAjB,SACE,gCACGT,EAAMY,KAAI,SAAAP,GACT,IAAMQ,EAASV,IAAiBE,EAEhC,OACE,qBACE,UAAQ,OAERI,UAAWK,IACT,CACE,+BAAgCD,IALtC,UAUKA,EAeG,6BACE,wBACE,UAAQ,eACRH,KAAK,SACLD,UAAU,iBACVE,QAAS,EAAKJ,YAJhB,iBAdF,6BACE,wBACE,UAAQ,YACRG,KAAK,SACLD,UAAU,SACVE,QAAS,WACP,EAAKP,UAAUC,IALnB,iBAwBR,oBACE,UAAQ,YACRI,UAAU,eAFZ,SAIGJ,MAvCEA,iBAhDvB,GAAyBU,aCpBzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e66edbe7.chunk.js","sourcesContent":["import { Component, ReactNode } from 'react';\nimport classNames from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string;\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    selectedGood: 'Jam',\n  };\n\n  addButton = (good: string) => {\n    this.setState({\n      selectedGood: good,\n    });\n  };\n\n  clearButton = () => {\n    this.setState({\n      selectedGood: '',\n    });\n  };\n\n  render(): ReactNode {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"section container\">\n        {\n          selectedGood\n            ? (\n              <h1 className=\"title is-flex is-align-items-center\">\n                {`${selectedGood} is selected`}\n\n                {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                <button\n                  data-cy=\"ClearButton\"\n                  type=\"button\"\n                  className=\"delete ml-3\"\n                  onClick={this.clearButton}\n                />\n              </h1>\n            )\n            : (<h1 className=\"title\">No goods selected</h1>)\n        }\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map(good => {\n              const isGood = selectedGood === good;\n\n              return (\n                <tr\n                  data-cy=\"Good\"\n                  key={good}\n                  className={classNames(\n                    {\n                      'has-background-success-light': isGood,\n                    },\n                  )}\n                >\n                  {\n                    !isGood\n                      ? (\n                        <td>\n                          <button\n                            data-cy=\"AddButton\"\n                            type=\"button\"\n                            className=\"button\"\n                            onClick={() => {\n                              this.addButton(good);\n                            }}\n                          >\n                            +\n                          </button>\n                        </td>\n                      ) : (\n                        <td>\n                          <button\n                            data-cy=\"RemoveButton\"\n                            type=\"button\"\n                            className=\"button is-info\"\n                            onClick={this.clearButton}\n                          >\n                            -\n                          </button>\n                        </td>\n                      )\n                  }\n                  <td\n                    data-cy=\"GoodTitle\"\n                    className=\"is-vcentered\"\n                  >\n                    {good}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}